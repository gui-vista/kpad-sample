plugins {
    id 'kotlin-multiplatform' version '1.3.10'
}
repositories {
    mavenCentral()
}
kotlin {
    targets {
        // For ARM, preset should be changed to presets.iosArm32 or presets.iosArm64
        // For Linux, preset should be changed to e.g. presets.linuxX64
        // For MacOS, preset should be changed to e.g. presets.macosX64
        fromPreset(presets.linuxX64, 'linux') {
            compilations.main.cinterops {
                gtk3 {
                    ['/usr/include'].each {
                        includeDirs "$it/atk-1.0", "$it/gdk-pixbuf-2.0", "$it/cairo", "$it/pango-1.0", "$it/gtk-3.0", "$it/glib-2.0"
                    }
                    includeDirs '/usr/lib/x86_64-linux-gnu/glib-2.0/include'
                }
            }
        }

        configure([linux]) {
            // Comment to generate Kotlin/Native library (KLIB) instead of executable file:
            compilations.main.outputKinds('EXECUTABLE')
            // Change to specify fully qualified name of your application's entry point:
            compilations.main.entryPoint = 'org.example.kpad.main'
        }
    }
    sourceSets {
        // Note: To enable common source sets please comment out 'kotlin.import.noCommonSourceSets' property
        // in gradle.properties file and re-import your project in IDE.
        linuxMain {
        }
        linuxTest {
        }
    }
}

task runProgram {
    // Change to 'debug' to run application with debug symbols.
    def buildType = 'release'
    dependsOn "link${buildType.capitalize()}ExecutableLinux"
    doLast {
        def programFile = kotlin.targets.linux.compilations.main.getBinary('EXECUTABLE', buildType)
        exec {
            executable programFile
            //noinspection GroovyAssignabilityCheck
            args ''
        }
    }
}